name: Check code coverage

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  CODE_COVERAGE_MODIFIER: 2
  RAMPING_CODE_COVERAGE_CAP: 90

jobs:
  check-code-coverage:
    # if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Fetch main branch
        run: git fetch origin main:main

      - name: Checkout main branch jest.config.json
        run: git checkout main -- jest.config.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Extract coverage threshold from main branch
        id: extract-min-code-coverage-from-main
        run: |
          thresholdFile=jest.config.json
          if [ -f "$thresholdFile" ]; then
            echo "Threshold file found"
            threshold=$(jq '.coverageThreshold.global.lines' $thresholdFile)
            echo "Threshold: $threshold"
            echo "threshold=$threshold" >> $GITHUB_OUTPUT
          else
            echo "Threshold file not found"
            exit 1
          fi

      - name: Modify coverage threshold
        id: modify-coverage-threshold
        run: |
          current_threshold=${{ steps.extract-min-code-coverage-from-main.outputs.threshold }}
          new_threshold=$((current_threshold + $CODE_COVERAGE_MODIFIER))
          echo "New Threshold: $new_threshold"
          # Update the jest.config.json file with the new threshold
          echo "new_threshold=$new_threshold" >> $GITHUB_OUTPUT

      # jq --argjson new_threshold "$new_threshold" '.coverageThreshold.global.lines = $new_threshold' jest.config.json > jest.config.tmp && mv jest.config.tmp jest.config.json

      - name: Output required line coverage
        run: |
          echo "Current Jest coverage threshold for lines is ${{ steps.extract-min-code-coverage-from-main.outputs.threshold }}%"
          echo "Required line coverage is ${{ steps.modify-coverage-threshold.outputs.new_threshold }}%"

      - name: Install dependencies
        run: npm install

      - name: Run coverage and print results
        run: |
          npm run coverage

      - name: Read and print coverage summary
        id: pull-request-coverage
        run: |
          coverageFile=coverage/coverage-summary.json
          if [ -f "$coverageFile" ]; then
            echo "Coverage file found"
            cat $coverageFile
            totalCoverage=$(jq '.total.lines.pct' $coverageFile)
            echo "Total line coverage: $totalCoverage%"
            echo "totalCoverage=$totalCoverage" >> $GITHUB_OUTPUT
          else
            echo "Coverage file not found!"
            exit 1
          fi

      - name: Print total coverage and threshold
        run: |
          echo "The line coverage on the Pull Request is ${{ steps.pull-request-coverage.outputs.totalCoverage }}%"
          echo "The line coverage threshold on main is ${{ steps.extract-min-code-coverage-from-main.outputs.threshold }}%"
          echo "The required line coverage threshold is ${{ steps.modify-coverage-threshold.outputs.new_threshold }}%"

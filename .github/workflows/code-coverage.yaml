name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Fetch main branch
        run: git fetch origin main:main

      - name: Checkout main branch jest.config.json
        run: git checkout main -- jest.config.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Extract coverage threshold
        id: extract-threshold
        run: |
          threshold=$(jq '.coverageThreshold.global.lines' jest.config.json)
          echo "Threshold: $threshold"
          echo "::set-output name=threshold::$threshold"

      - name: Output coverage threshold
        run: echo "Current Jest coverage threshold for lines is ${{ steps.extract-threshold.outputs.threshold }}"

      - name: Install dependencies
        run: npm install

      - name: Run coverage and print results
        run: |
          npm run coverage

      - name: Read and print coverage summary
        id: coverage
        run: |
          coverageFile=coverage/coverage-summary.json
          if [ -f "$coverageFile" ]; then
            echo "Coverage file found"
            cat $coverageFile
            totalCoverage=$(jq '.total.lines.pct' $coverageFile)
            echo "Total line coverage: $totalCoverage%"
            echo "::set-output name=coverage::$totalCoverage"
          else
            echo "Coverage file not found!"
            exit 1
          fi

      - name: Read coverageThreshold from jest.config.json on main
        id: coverage-threshold
        run: |
          thresholdFile=${{ steps.extract-threshold.outputs.threshold }}"
          if [ -f "$thresholdFile" ]; then
            echo "Threshold file found"
            cat $thresholdFile
            lineThreshold=$(jq '.coverageThreshold.global.lines' $thresholdFile)
            echo "Line coverage threshold: $lineThreshold%"
            echo "::set-output name=line-threshold::$lineThreshold"
          else
            echo "Threshold file not found!"
            exit 1
          fi

      - name: Print total coverage and threshold
        run: |
          echo "The total coverage is ${{ steps.coverage.outputs.coverage }}%"
          echo "The line coverage threshold is ${{ steps.coverage-threshold.outputs.line-threshold }}%"

      - name: Update coverageThreshold if needed
        if: steps.coverage.outputs.coverage > steps.coverage-threshold.outputs.line-threshold
        run: |
          thresholdFile=jest.config.json
          newThreshold=$(jq '.coverageThreshold.global.lines = $newVal' --argjson newVal "${{ steps.coverage.outputs.coverage }}" $thresholdFile)
          echo "$newThreshold" > $thresholdFile
          cat $thresholdFile

      - name: Commit and push updated coverageThreshold
        if: steps.coverage.outputs.coverage > steps.coverage-threshold.outputs.line-threshold
        run: |
          git config --global user.name 'BrandonWong22'
          git config --global user.email 'brandonwong2608@gmail.com'
          git add .
          git commit -m "Update coverage threshold to ${{ steps.coverage.outputs.coverage }}%"
          git pull origin ${{ github.head_ref }} --rebase
          git push origin HEAD:${{ github.head_ref }}

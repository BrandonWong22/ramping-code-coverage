name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  check-code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Fetch main branch
        run: git fetch origin main:main

      - name: Checkout main branch jest.config.json
        run: git checkout main -- jest.config.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Extract coverage threshold from main branch
        id: extract-min-code-coverage-from-main
        run: |
          thresholdFile=jest.config.json
          if [ -f "$thresholdFile" ]; then
            echo "Threshold file found"
            threshold=$(jq '.coverageThreshold.global.lines' $thresholdFile)
            echo "Threshold: $threshold"
            echo "::set-output name=threshold::$threshold"
          else
            echo "Threshold file not found!"
            exit 1
          fi

      - name: Output coverage threshold
        run: echo "Current Jest coverage threshold for lines is ${{ steps.extract-min-code-coverage-from-main.outputs.threshold }}"

      - name: Install dependencies
        run: npm install

      - name: Run coverage and print results
        run: |
          npm run coverage

      - name: Read and print coverage summary
        id: coverage
        run: |
          coverageFile=coverage/coverage-summary.json
          if [ -f "$coverageFile" ]; then
            echo "Coverage file found"
            cat $coverageFile
            totalCoverage=$(jq '.total.lines.pct' $coverageFile)
            echo "Total line coverage: $totalCoverage%"
            echo "::set-output name=coverage::$totalCoverage"
          else
            echo "Coverage file not found!"
            exit 1
          fi

      - name: Print total coverage and threshold
        run: |
          echo "The total coverage is ${{ steps.coverage.outputs.coverage }}%"
          echo "The line coverage threshold is ${{ steps.extract-min-code-coverage-from-main.outputs.threshold }}%"

      - name: Calculate new threshold
        id: calculate-new-threshold
        run: |
          currentThreshold=${{ steps.extract-min-code-coverage-from-main.outputs.threshold }}
          newThreshold=$((currentThreshold + 2))
          echo "New value $newThreshold"

      - name: Update coverageThreshold if needed
        if: steps.coverage.outputs.coverage > steps.calculate-new-threshold.outputs.threshold
        run: |
          thresholdFile=jest.config.json
          newThreshold=$(jq '.coverageThreshold.global.lines = $newVal' --argjson newVal "${{ steps.coverage.outputs.coverage }}" $thresholdFile)
          echo "$newThreshold" > $thresholdFile
          cat $thresholdFile

      - name: Upload updated jest.config.json
        if: steps.coverage.outputs.coverage > steps.extract-min-code-coverage-from-main.outputs.threshold
        uses: actions/upload-artifact@v4
        with:
          name: updated-jest-config
          path: jest.config.json

  push-to-main:
    needs: check-code-coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: updated-jest-config
